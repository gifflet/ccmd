# GoReleaser configuration
# Documentation: https://goreleaser.com

version: 2

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: ccmd
    main: ./cmd/ccmd
    binary: ccmd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.buildDate={{.Date}}
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: ccmd-archive
    name_template: >-
      ccmd-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge branch
  groups:
    - title: 'Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'Other'
      order: 999

snapshot:
  name_template: "{{ incpatch .Version }}-next"

release:
  github:
    owner: gifflet
    name: ccmd
  name_template: "v{{.Version}}"
  header: |
    ## ccmd {{.Version}} ({{.Date}})
    
    Welcome to this new release!
  footer: |
    ## Thanks!
    
    Those were the changes on {{ .Tag }}!
  draft: false
  prerelease: auto
  mode: append

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - '--yes'
    artifacts: checksum
    output: true

milestones:
  - close: true
    fail_on_error: false
    name_template: "{{ .Tag }}"

nfpms:
  - id: packages
    package_name: ccmd
    vendor: Gifflet
    homepage: https://github.com/gifflet/ccmd
    maintainer: Gifflet <contact@gifflet.com>
    description: |
      A CLI tool for managing Claude Code commands.
      ccmd helps you efficiently manage and execute Claude Code commands.
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    contents:
      - src: ./LICENSE
        dst: /usr/share/licenses/ccmd/LICENSE
      - src: ./README.md
        dst: /usr/share/doc/ccmd/README.md