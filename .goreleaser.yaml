# GoReleaser configuration
# Documentation: https://goreleaser.com

version: 2

before:
  hooks:
    - go mod tidy
    - go mod download

builds:
  - id: ccmd
    main: ./cmd/ccmd
    binary: ccmd
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.buildDate={{.Date}}
    mod_timestamp: '{{ .CommitTimestamp }}'

archives:
  - id: ccmd-archive
    name_template: >-
      ccmd-
      {{- .Os }}-
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        format: zip
    files:
      - LICENSE*
      - README*
      - CHANGELOG*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^chore:'
      - '^style:'
      - 'Merge pull request'
      - 'Merge branch'
      - 'merge conflict'
      - '^WIP:'
  groups:
    - title: '🚀 Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: '🐛 Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: '⚡ Performance Improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: '🔨 Build System'
      regexp: '^.*?build(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: '👷 CI/CD'
      regexp: '^.*?ci(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: '📚 Documentation'
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 5
    - title: '🔧 Refactoring'
      regexp: '^.*?refactor(\([[:word:]]+\))??!?:.+$'
      order: 6
    - title: '🧪 Tests'
      regexp: '^.*?test(\([[:word:]]+\))??!?:.+$'
      order: 7
    - title: '📦 Dependencies'
      regexp: '^.*?(deps|dependency)(\([[:word:]]+\))??!?:.+$'
      order: 8
    - title: '💥 Breaking Changes'
      regexp: '^.*?(\w+)(\([[:word:]]+\))??!:.+$'
      order: -1
    - title: '🔄 Other Changes'
      order: 999

snapshot:
  name_template: "{{ incpatch .Version }}-next"

release:
  github:
    owner: gifflet
    name: ccmd
  name_template: "v{{.Version}}"
  header: |
    # 🎉 ccmd {{.Version}}
    
    ## What's Changed

  footer: |
    
    ---
    
    ## 📥 Installation
    
    ### Using npm
    ```bash
    npm install -g @gifflet/ccmd@{{.Version}}
    ```
    
    ### Using Go
    ```bash
    go install github.com/gifflet/ccmd/cmd/ccmd@{{.Tag}}
    ```
    
    ### Download Binary
    Download the appropriate binary for your platform from the [release assets](https://github.com/gifflet/ccmd/releases/tag/{{.Tag}}) above.
    
    ## 📖 Documentation
    
    - [Getting Started](https://github.com/gifflet/ccmd#getting-started)
    - [Commands Reference](https://github.com/gifflet/ccmd/blob/main/docs/commands.md)
    - [Contributing Guide](https://github.com/gifflet/ccmd/blob/main/CONTRIBUTING.md)
    
    ## 💬 Support
    
    If you encounter any issues or have questions:
    - 🐛 [Report a Bug](https://github.com/gifflet/ccmd/issues/new?template=bug_report.md)
    - 💬 [Start a Discussion](https://github.com/gifflet/ccmd/discussions)
    
    Thank you for using ccmd! 🙏
  draft: false
  prerelease: auto
  mode: replace

sboms:
  - artifacts: archive

signs:
  - cmd: cosign
    certificate: '${artifact}.pem'
    args:
      - sign-blob
      - '--output-certificate=${certificate}'
      - '--output-signature=${signature}'
      - '${artifact}'
      - '--yes'
    artifacts: checksum
    output: true

milestones:
  - close: true
    fail_on_error: false
    name_template: "{{ .Tag }}"

nfpms:
  - id: packages
    package_name: ccmd
    vendor: Gifflet
    homepage: https://github.com/gifflet/ccmd
    maintainer: Gifflet <contact@gifflet.com>
    description: |
      A CLI tool for managing Claude Code commands.
      ccmd helps you efficiently manage and execute Claude Code commands.
    license: MIT
    formats:
      - deb
      - rpm
      - apk
    bindir: /usr/bin
    contents:
      - src: ./LICENSE
        dst: /usr/share/licenses/ccmd/LICENSE
      - src: ./README.md
        dst: /usr/share/doc/ccmd/README.md